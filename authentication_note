$this->app['auth']->viaRequest('api', function ($request) {
    //this function duoc dung de get thong tin cua user tu api_token
    if ($request->input('api_token')) {
        return User::where('api_token', $request->input('api_token'))->first();
    }
});

this is a simple example to demo authentication in lumen
this example use simple mechanism
  - after user login success to system-> the system generate random token ->update token to database following user email
  - each request after login have to input api_token to run action
https://www.cloudways.com/blog/lumen-rest-api-authentication/

authenticate using jwt mechanism
trong cach lam nay, sau khi user login thanh cong,jwt se tao mot token,trong thong tin payload co chua id cua user login
khi thuc hien auth check thi sex kiem tra xem id co ton tai trong database hay khong
trong class LumenServiceProvider trong file bootstrap/app.php co ham extendAuthGuard
trong ham nay se dinh nghia viec khoi tao Gaurd nhu the nao

protected function extendAuthGuard()
    {
        $this->app['auth']->extend('jwt', function ($app, $name, array $config) {
            $guard = new JWTGuard(
                $app['tymon.jwt'],
                $app['auth']->createUserProvider($config['provider']),
                $app['request']
            );

            $app->refresh('request', $guard, 'setRequest');

            return $guard;
        });
    }

trong controller Authenticate có gọi tới hàm Auth::attempt
hàm trên sẽ gọi tới hàm call của class AuthManager -> gaurd() ->gọi vào hàm call back của hàm extendAuthGuard -> khởi tạo jwt guard tương ứng
xem them trong ham resolve cua AuthManager

trong middleware của tymon có dùng tới auto dependency injection
trong đó có class \Tymon\JWTAuth\Contracts\Providers\Auth được alias bởi tymon.jwt.provider.auth
được định nghia trong hàm register alias of \Tymon\JWTAuth\Providers\AbstractServiceProvider
măt khác hàm registerAuthProvider lại định nghia khởi tạo cho key tymon.jwt.provider.auth như thế nào

trong file config của tymon có định nghĩa providers.auth tới class Tymon\JWTAuth\Providers\Auth\Illuminate
trong constructor của class trên có dependency tới Illuminate\Contracts\Auth\Guard
mà Illuminate\Contracts\Auth\Guard lại được định nghia trong alias trong method \Laravel\Lumen\Application::registerContainerAliases
viec resolve de lay instance Illuminate\Contracts\Auth\Guard là hàm registerAuthBindings với key là auth.driver




refreshflow:check xem refresh token da het han chua,trong phan khoi tao cua Payload,
validate duoc thuc hien trong ham make cuar jwtAuth/factory
public function validateRefresh($refreshTTL)
  {
      if ($this->isPast($this->getValue() + $refreshTTL * 60)) {
          throw new TokenExpiredException('Token has expired and can no longer be refreshed');
      }
  }
cua class IssuedAt

khi thuc hien refresh token thi he thong se check xem token nay co refresh duoc hay
khong(dua vao thoi gian setting refresh token)
neu da expired thi ban ra loi

nhu vay tymon/jwt thuc hien co che  la truyen chinh access token len de refresh token
neu vuot qua thoi gian co the refresh thi la loi
tinh nang blackListenable=true de chanh truong hop dung lai token de refresh(truong hop bi hack token)

khi thuc hien login thi se check thong tin payload xem token con dung khong

install https://jwt-auth.readthedocs.io/en/develop/lumen-installation/
https://dev.to/ndiecodes/build-a-jwt-authenticated-api-with-lumen-2afm
